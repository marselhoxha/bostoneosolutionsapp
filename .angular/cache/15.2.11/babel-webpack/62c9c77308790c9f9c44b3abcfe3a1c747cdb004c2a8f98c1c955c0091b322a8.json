{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n    this.server = 'http://localhost:8080';\n    this.customers$ = (page = 0) => this.http.get(`${this.server}/customer/list?page=${page}`).pipe(tap(console.log), catchError(this.handleError));\n  }\n  handleError(error) {\n    console.log(error);\n    let errorMessage;\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `A client error occurred - ${error.error.message}`;\n    } else {\n      if (error.error.reason) {\n        errorMessage = error.error.reason;\n        console.log(errorMessage);\n      } else {\n        errorMessage = `An error occurred - Error status ${error.status}`;\n      }\n    }\n    return throwError(errorMessage);\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAACC,GAAG,QAAQ,gBAAgB;;;AAQ/C,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,WAAM,GAAW,uBAAuB;IAIzD,eAAU,GAAG,CAACC,OAAe,CAAC,KAC5B,IAAI,CAACD,IAAI,CAACE,GAAG,CACV,GAAG,IAAI,CAACC,MAAM,uBAAuBF,IAAI,EAAE,CAAC,CAC5CG,IAAI,CACHP,GAAG,CAACQ,OAAO,CAACC,GAAG,CAAC,EAChBV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EARmC;EAWhCA,WAAW,CAACC,KAAwB;IAC1CH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB,IAAIC,YAAoB;IACxB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrCD,YAAY,GAAG,6BAA6BD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;KAClE,MAAM;MACL,IAAIH,KAAK,CAACA,KAAK,CAACI,MAAM,EAAE;QACtBH,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACI,MAAM;QACjCP,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;OAC1B,MAAM;QACLA,YAAY,GAAG,oCAAoCD,KAAK,CAACK,MAAM,EAAE;;;IAGrE,OAAOlB,UAAU,CAACc,YAAY,CAAC;EACjC;;;mBA7BWX,eAAe;AAAA;;SAAfA,eAAe;EAAAgB,SAAfhB,eAAe;EAAAiB,YAFd;AAAM","names":["throwError","catchError","tap","CustomerService","constructor","http","page","get","server","pipe","console","log","handleError","error","errorMessage","ErrorEvent","message","reason","status","factory","providedIn"],"sourceRoot":"","sources":["/Users/marsel/bostoneo/bostoneosolutionsapp/src/app/service/customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError,tap } from 'rxjs/operators';\nimport { CustomHttpResponse, Profile } from '../interface/appstates';\nimport { User } from '../interface/user';\nimport { Key } from '../enum/key.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  \n  private readonly server: string = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  customers$ = (page: number = 0) => <Observable<CustomHttpResponse<Profile>>>\n    this.http.get<CustomHttpResponse<any>>\n      (`${this.server}/customer/list?page=${page}`)\n      .pipe(\n        tap(console.log),\n        catchError(this.handleError)\n      );\n\n \n  private handleError(error: HttpErrorResponse): Observable<never> {\n    console.log(error);\n    let errorMessage: string;\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `A client error occurred - ${error.error.message}`;\n    } else {\n      if (error.error.reason) {\n        errorMessage = error.error.reason;\n        console.log(errorMessage);\n      } else {\n        errorMessage = `An error occurred - Error status ${error.status}`;\n      }\n    }\n    return throwError(errorMessage);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}